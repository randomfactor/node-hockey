Prerequisites:

	* CouchDB v1.2.1
	* Redis v2.6.14
	* nvm
	* node v0.10.12
	* express 

	$ nvm use 0.10.12

Create express project:

	$ cd src
	$ express -css stylus hockey
	$ cd express
	$ mv public/javascripts public/js
	$ mv public/stylesheets public/css
	$ mv public/images public/img
	$ npm install

	$ echo node_modules/ > .gitignore
	$ pluma README.md

Create GitHub project:

	$ git init
	$ git add --all
	$ git status
	$ git commit -m "node-hockey: a simple skeleton project sample"
	$ git remote add origin https://github.com/randomfactor/node-hockey.git
	$ git push -u origin master
		| Username for 'https://github.com': randumfaktor@gmail.com
		| Password for 'https://randumfaktor@gmail.com@github.com': 
		| To https://github.com/randomfactor/node-hockey.git
		|  * [new branch]      master -> master
		| Branch master set up to track remote branch master from origin.

Add Twitter Bootstrap

    # merge into public/{css,js,img} directories

    $ ... git commit
    $ git tag -a 'Step 01' -m 'Add Twitter Bootstrap'
	$ git push -u origin master

    # undesirable to type username and password for every push.
    # deleted local copy, then 'git clone git@github.com:randomfactor/node-hockey.git hockey'

Add Emberjs

    # get Ember starter kit 1.0 RC6
    # merge js into public/js
    # copy index.html into public

Convert to coffee-script

    $ sudo npm install -g coffee-script
    $ npm install connect-assets
    $ mkdir assets/css assets/js
    $ rm js/app.js css/style.css

    # add assets/css/style.styl assets/js/app.coffee
    # rewrite app.js as server.coffee and modify project to suit

Add client-side Jasmine test

    # Download standalone Jasmine archive
    # jasmine.css -> public/css
    # jasmine.js, jasmine-html.js -> public/js/test
    # add route for /test
    # add test.jade to views/test
    # visit http://lvh.me:3000/test to run client test

Add server-side Jasmine test

    $ sudo npm install -g jasmine-node
    # mkdir spec
    # svr-spec.coffee to hold first tests
    $ jasmine-node --coffee spec   # run tests
    $ sudo npm install -g grunt-cli
    $ npm install grunt grunt-jasmine-node           # add grunt to package.json
    # Gruntfile.coffee to run server-side tests
    $ grunt jasmine_node        # runs the tests in spec directory

Figuring out model

    # get Ember Model from https://github.com/ebryn/ember-model
    # js/libs/ember-model-20130707.js

Session state with Redis

    $ npm install connect-redis --save
    # routes/index.coffee:
    #     req.session['playerName'] = 'anonymous' if not req.session['playerName']?
    # redis-cli
    #   redis 127.0.0.1:6379> select 2
    #   redis 127.0.0.1:6379[2]> keys *

Model storage with CouchDB

    # http://mircozeiss.com/async-couchdb-queries-with-nano-and-promises/
    $ npm install nano --save
    $ npm install q --save
    # get Math.uuid() from https://gist.github.com/ne-sachirou/882192

